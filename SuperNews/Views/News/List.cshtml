@using Microsoft.AspNetCore.Authorization;
@using SuperNews.UsersRoles;
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@model SuperNews.Models.NewsListViewModel
@inject IAuthorizationService AuthorizationService

@{
    string pathAndQuery =
            Context.Request.Path +
            Context.Request.QueryString;

    ViewData["Title"] = Model.Rubrics == null
    ? "Новости"
    : $"Новости ({Model.Rubrics})";
}

<h1>List</h1>

<form method="get">
    <div>
        <label>Имя: </label>
        <input asp-for="Name" />

        <label>Компания: </label>
        <select name="Rubric" asp-items="Model.Rubrics"></select>

        <input type="submit" value="Фильтр" />
    </div>
</form>

@if ((AuthorizationService.AuthorizeAsync(User, Permissions.News.Create)).Result.Succeeded)
{
    <p>
        <a asp-action="Create">Create New</a>
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                Название новости
            </th>
            <th>
                Дата создания новости
            </th>
            <th> </th>
            <th> </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.News) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreationDate)
            </td>
            <td>
                    <a asp-action="AddToBookmarks"
                   asp-controller="News"
                   asp-route-id="@item.NewsId"
                   asp-route-urlReturn="@pathAndQuery"
                       class="btn btn-light">
                        Отправить в закладки
                    </a>
            </td>
            <td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.NewsId }) |
                    @Html.ActionLink("Details", "Details", new { id=item.NewsId }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.NewsId })
            </td>
        </tr>
}
    </tbody>
</table>
